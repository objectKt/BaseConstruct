plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
}

android {
    namespace 'com.android.launcher'
    compileSdk 34

    defaultConfig {
        applicationId "com.android.launcher"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // 新项目里采用 layout 的分级目录设置，就可以在一个项目里同时开发多个 app 的不同布局文件
    // 并且相同的布局可以复用，比如 common-dialog 目录下的页面弹窗 UI 等
    def listSubFile = {
        def resFolder = 'src/main/res/layouts'
        def files = file(resFolder).listFiles()
        def folders = []
        files.each {
            item -> folders.add(item.absolutePath)
        }
        folders.add(file(resFolder).parentFile.absolutePath)
        return folders
    }

    sourceSets {
        main {
            res.srcDirs = listSubFile()
        }
    }

    // Flavor Dimension 配置不同的多个 app 的特性
}

dependencies {
    implementation project(":LibraryAuto")
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
}