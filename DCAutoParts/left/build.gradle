plugins {
    alias(libs.plugins.androidApplication)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    id("io.objectbox")
}
apply plugin: 'org.greenrobot.greendao'

def ver = libs.versions

android {
    namespace ver.appId.get().toString()
    compileSdk ver.compileVersion.get().toInteger()

    defaultConfig {
        applicationId ver.appId.get().toString()
        minSdk ver.minSdkVersion.get().toInteger()
        targetSdk ver.compileVersion.get().toInteger()
        versionCode ver.versionCode.get().toInteger()
        versionName ver.versionName.get().toString()
        signingConfig signingConfigs.debug
    }

//    splits {
//        // 启用 ABI 拆分，并指定要包含的 ABI。
//        // 这样可以根据设备的不同 CPU 架构来加载相应的 JNI 库文件，
//        // 从而减小 APK 的大小，提高应用程序的兼容性和性能
//        abi {
//            enable true
//            reset()
//            include 'armeabi-v7a'
//            universalApk true
//        }
//    }

    signingConfigs {
        release {
            storeFile file('../apk.jks')
            storePassword 'dcqp231112'
            keyAlias 'leftS223'
            keyPassword 'dcqp231112'
        }
        debug {
            storeFile file('../apk.jks')
            storePassword 'dcqp231112'
            keyAlias 'leftS223'
            keyPassword 'dcqp231112'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            renderscriptOptimLevel 1
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "AutoParts" + versionCode + ".apk"
                }
            }
        }

        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.release
            renderscriptOptimLevel 1
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "AutoParts" + versionCode + ".apk"
                }
            }
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions { jvmTarget = '1.8' }
}

//greendao {
//    schemaVersion 1001
//    // 生成数据库文件的目录
//    targetGenDir 'src/main/java'
//    // 生成的数据库相关文件的包名
//    daoPackage 'com.android.launcher.dao'
//}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx
    implementation libs.androidx.material
    implementation libs.androidx.constraintlayout
    implementation libs.recyclerview
    implementation libs.recyclerviewSelection
    implementation libs.rxandroid
    implementation libs.rxjava
    implementation libs.baseRecyclerViewAdapterHelper
    implementation libs.eventbus
    implementation libs.greendao
    implementation libs.fastjson
    implementation libs.squareup.okhttp
    implementation libs.usb
    implementation libs.free.reflection
    implementation libs.anrwatchdog
    implementation libs.popup
    implementation libs.coreprogress
    implementation libs.mapNav
    implementation libs.mapSearch
    implementation libs.library
    implementation libs.roomRuntime
    annotationProcessor libs.roomCompiler
    implementation project(path: ':libraryAuto')
    implementation project(path: ':libraryUI')
}